<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
         http://java.sun.com/xml/ns/javaee
		 http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0" >

  <display-name>Archetype Created Web Application</display-name>

  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>nginxFir.root</param-value>
  </context-param>

  <!-- log4j2的监听器 -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <!-- log4j2文件的配置 -->
  <context-param>
    <param-name>log4jConfiguration</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>


  <!-- 监听器配置（监听ServletContext是否加载，加载后初始化spring的bean文件内的对象并存入ServletContext） -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- spring文件的配置（与ContextLoaderListener配合，不设置此属性，监听器默认去src下找名、为applicationContext的配置文件） -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring.xml</param-value>
  </context-param>

  <!-- spring MVC 的配置 -->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <!-- DispatcherServlet: 前端控制器，集中访问点，负责职责的分派(为各个controller分派任务) -->
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>
        classpath:springMVC.xml
      </param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>


  <listener>
    <listener-class>com.DoServletContextListener</listener-class>
  </listener>


</web-app>
